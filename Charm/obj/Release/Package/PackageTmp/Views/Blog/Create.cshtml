@model Charm.Models.BlogPost

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<div class="container">
    <div class="row">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()




            <div class="form-horizontal">
                <h4>BlogPost</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <!--=============TITLE BEGINS======================================/-->

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!--=============TITLE ENDS======================================/-->


                <!--=============BLOG BEGINS======================================/-->

                <div class="form-group">
                    @Html.LabelFor(model => model.Blog, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Blog, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Blog, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!--=============BLOG ENDS======================================/-->


                <!--=============MEDIA BEGINS======================================/-->

                <div class="form-group">
                    @Html.LabelFor(model => model.MediaUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MediaUrl, "", new { @class = "text-danger" })
                        <form action="@Url.Action("Create")" method="post" enctype="multipart/form-data">
                            <input name="image" type="file" class="form-control" id="fileUpload" />
                        </form>
                    </div>
                </div>
              
                <!--=============MEDIA ENDS======================================/-->

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>

        }

        @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
  
@section scripts{
<script src="/Scripts/tinymce/jquery.tinymce.min.js"></script>
<script src="/Scripts/tinymce/tinymce.min.js"></script>
<script>
            tinymce.init({
                selector: "textarea",
                theme: "modern",
                width: 800,
                height: 300,
                plugins: [
                     "advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker",
                     "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
                     "save table contextmenu directionality emoticons template paste textcolor"
                ],
                content_css: "css/content.css",
                toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | l      ink image | print preview media fullpage | forecolor backcolor emoticons",
                style_formats: [
                     { title: 'Bold text', inline: 'b' },
                     { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } },
                     { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } },
                     { title: 'Example 1', inline: 'span', classes: 'example1' },
                     { title: 'Example 2', inline: 'span', classes: 'example2' },
                     { title: 'Table styles' },
                     { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }
                ]
            });
</script>
}